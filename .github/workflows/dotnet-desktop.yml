name: .NET Desktop CI/CD

on:
  push:
    tags:
      - '*'
  pull_request:
    branches: [ "master" ]

env:
  PROJECT_PATH: HeatedMetalManager.csproj
  PUBLISH_OUTPUT_DIR: bin\Release\net9.0-windows10.0.26100.0\win-x64\publish

jobs:
  build-sign-package:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: Publish Application
      run: |
        dotnet publish ${{ env.PROJECT_PATH }} -c Release -r win-x64 /p:PublishSingleFile=true

    - name: Sign Executable
      uses: windows-actions/sign-pfx@v1
      with:
        path: ${{ env.PUBLISH_OUTPUT_DIR }}\HeatedMetalManager.exe
        pfx: ${{ secrets.Base64_Encoded_Pfx }}
        password: ${{ secrets.Pfx_Key }}
        timestamp_url: http://timestamp.digicert.com

    - name: Create GitHub Release
      uses: actions/create-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: true
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.PUBLISH_OUTPUT_DIR }}\HeatedMetalManager.exe
        asset_name: HeatedMetalManager.exe
        asset_content_type: application/octet-stream
